# Generated by Django 4.2.2 on 2023-09-05 15:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Kategorija')),
            ],
            options={
                'verbose_name': 'Kategorija',
                'verbose_name_plural': 'Kategorijos',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Pavadinimas')),
                ('coordinates', models.IntegerField(blank=True, null=True, verbose_name='Koordinatės')),
                ('description', models.TextField(max_length=3000, verbose_name='Apie')),
                ('working_hours', models.CharField(blank=True, max_length=255, null=True, verbose_name='Darbo valandos')),
                ('tel', models.CharField(max_length=20, verbose_name='Telefono numeris')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Svetainė')),
                ('favourited_by', models.ManyToManyField(related_name='favourite_places', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Objektas',
                'verbose_name_plural': 'Objektai',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('type', models.CharField(blank=True, choices=[('S', 'Suaugusiems'), ('V', 'Vaikams'), ('N', 'Neįgaliems ir pencininkams'), ('B', 'Bendrinis')], default='B', help_text='Bilieto tipas', max_length=1)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='egidas.place')),
            ],
            options={
                'verbose_name': 'Bilietas',
                'verbose_name_plural': 'Bilietai',
            },
        ),
        migrations.CreateModel(
            name='TicketOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Kiekis')),
                ('purchase_date', models.DateTimeField(auto_now_add=True, verbose_name='Pirkimo data')),
                ('total', models.IntegerField(blank=True, null=True, verbose_name='Galioja iki')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='egidas.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_purchases', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TicketInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('due_to', models.DateTimeField(blank=True, null=True, verbose_name='Galojimas iki')),
                ('status', models.CharField(choices=[('G', 'Galiojantis'), ('P', 'Panaudotas'), ('N', 'Nebegalioja'), ('A', 'Atšauktas')], default='G', max_length=1)),
                ('ticket_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_Instances', to='egidas.ticketorder')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Subkategorija')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='egidas.category')),
            ],
            options={
                'verbose_name': 'Subkategorija',
                'verbose_name_plural': 'Subkategorijos',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Atsiliepimas')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Įvertinimas')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='egidas.place')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Atsiliepimas',
                'verbose_name_plural': 'Atsiliepimai',
            },
        ),
        migrations.AddField(
            model_name='place',
            name='subcategories',
            field=models.ManyToManyField(help_text='Priskirkite subkategorijas', related_name='places', to='egidas.subcategory'),
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to='egidas.place')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pamėgtas',
                'verbose_name_plural': 'Pamėgti',
                'unique_together': {('user', 'place')},
            },
        ),
    ]
